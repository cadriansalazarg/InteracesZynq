-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity acc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    simConfig_rowsToSimulate_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimulate_V_empty_n : IN STD_LOGIC;
    simConfig_rowsToSimulate_V_read : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_empty_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_read : OUT STD_LOGIC;
    simConfig_rowsToSimulate_V_out_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimulate_V_out_full_n : IN STD_LOGIC;
    simConfig_rowsToSimulate_V_out_write : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_out_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_out_full_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_out_write : OUT STD_LOGIC;
    F_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_0_empty_n : IN STD_LOGIC;
    F_V_data_0_read : OUT STD_LOGIC;
    F_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_1_empty_n : IN STD_LOGIC;
    F_V_data_1_read : OUT STD_LOGIC;
    F_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_2_empty_n : IN STD_LOGIC;
    F_V_data_2_read : OUT STD_LOGIC;
    F_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_3_empty_n : IN STD_LOGIC;
    F_V_data_3_read : OUT STD_LOGIC;
    V_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_0_empty_n : IN STD_LOGIC;
    V_V_data_0_read : OUT STD_LOGIC;
    V_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_1_empty_n : IN STD_LOGIC;
    V_V_data_1_read : OUT STD_LOGIC;
    V_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_2_empty_n : IN STD_LOGIC;
    V_V_data_2_read : OUT STD_LOGIC;
    V_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_3_empty_n : IN STD_LOGIC;
    V_V_data_3_read : OUT STD_LOGIC;
    F_acc_V_data_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_0_full_n : IN STD_LOGIC;
    F_acc_V_data_0_write : OUT STD_LOGIC;
    F_acc_V_data_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_1_full_n : IN STD_LOGIC;
    F_acc_V_data_1_write : OUT STD_LOGIC;
    F_acc_V_data_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_2_full_n : IN STD_LOGIC;
    F_acc_V_data_2_write : OUT STD_LOGIC;
    F_acc_V_data_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_3_full_n : IN STD_LOGIC;
    F_acc_V_data_3_write : OUT STD_LOGIC;
    V_acc_V_data_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_0_full_n : IN STD_LOGIC;
    V_acc_V_data_0_write : OUT STD_LOGIC;
    V_acc_V_data_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_1_full_n : IN STD_LOGIC;
    V_acc_V_data_1_write : OUT STD_LOGIC;
    V_acc_V_data_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_2_full_n : IN STD_LOGIC;
    V_acc_V_data_2_write : OUT STD_LOGIC;
    V_acc_V_data_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_3_full_n : IN STD_LOGIC;
    V_acc_V_data_3_write : OUT STD_LOGIC );
end;


architecture behav of acc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_1 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal simConfig_rowsToSimulate_V_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_blk_n : STD_LOGIC;
    signal simConfig_rowsToSimulate_V_out_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_out_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_159_F_V_data_0_blk_n : STD_LOGIC;
    signal F_V_data_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_flatten_reg_263 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal grp_readCalcData_fu_159_F_V_data_1_blk_n : STD_LOGIC;
    signal F_V_data_1_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_159_F_V_data_2_blk_n : STD_LOGIC;
    signal F_V_data_2_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_159_F_V_data_3_blk_n : STD_LOGIC;
    signal F_V_data_3_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_159_V_V_data_0_blk_n : STD_LOGIC;
    signal V_V_data_0_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_159_V_V_data_1_blk_n : STD_LOGIC;
    signal V_V_data_1_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_159_V_V_data_2_blk_n : STD_LOGIC;
    signal V_V_data_2_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_159_V_V_data_3_blk_n : STD_LOGIC;
    signal V_V_data_3_blk_n : STD_LOGIC;
    signal F_acc_V_data_0_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_263_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal F_acc_V_data_1_blk_n : STD_LOGIC;
    signal F_acc_V_data_2_blk_n : STD_LOGIC;
    signal F_acc_V_data_3_blk_n : STD_LOGIC;
    signal V_acc_V_data_0_blk_n : STD_LOGIC;
    signal V_acc_V_data_1_blk_n : STD_LOGIC;
    signal V_acc_V_data_2_blk_n : STD_LOGIC;
    signal V_acc_V_data_3_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_148 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal grp_fu_231_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bound_reg_258 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond_flatten_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state8_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_263_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_263_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_242_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal indvar_flatten_next_reg_267 : STD_LOGIC_VECTOR (53 downto 0);
    signal F_vector_data_0_reg_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage1_iter2 : BOOLEAN;
    signal F_acc_V_data_01_status : STD_LOGIC;
    signal V_acc_V_data_01_status : STD_LOGIC;
    signal ap_block_state33_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal F_vector_data_1_reg_277 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_2_reg_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_3_reg_287 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_0_reg_292 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_1_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_2_reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_3_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_0_1_reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state26_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal F_vector_data_1_1_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_2_1_reg_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_3_1_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_0_1_reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_1_1_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_2_1_reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_3_1_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_0_2_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state27_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal F_vector_data_1_2_reg_357 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_2_2_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_3_2_reg_367 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_0_2_reg_372 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_1_2_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_2_2_reg_382 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_3_2_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_0_3_reg_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state12_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state28_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal F_vector_data_1_3_reg_397 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_2_3_reg_402 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_3_3_reg_407 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_0_3_reg_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_1_3_reg_417 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_2_3_reg_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_3_3_reg_427 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_179_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_reg_432 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal grp_fu_183_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_reg_437 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_187_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_1_reg_442 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_1_reg_447 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_2_reg_452 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_2_reg_457 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_3_reg_462 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_3_reg_467 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_4_reg_472 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_4_reg_477 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_5_reg_482 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_5_reg_487 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_6_reg_492 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state13_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state29_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal dataTemp2_6_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_7_reg_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_7_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state14_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state22_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state30_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal tmp_data_0_reg_512 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_data_0_4_reg_517 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_reg_522 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state15_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state23_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state31_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_data_1_4_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_reg_532 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_4_reg_537 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_reg_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_4_reg_547 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state8 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_readCalcData_fu_159_ap_start : STD_LOGIC;
    signal grp_readCalcData_fu_159_ap_done : STD_LOGIC;
    signal grp_readCalcData_fu_159_ap_idle : STD_LOGIC;
    signal grp_readCalcData_fu_159_ap_ready : STD_LOGIC;
    signal grp_readCalcData_fu_159_F_V_data_0_read : STD_LOGIC;
    signal grp_readCalcData_fu_159_F_V_data_1_read : STD_LOGIC;
    signal grp_readCalcData_fu_159_F_V_data_2_read : STD_LOGIC;
    signal grp_readCalcData_fu_159_F_V_data_3_read : STD_LOGIC;
    signal grp_readCalcData_fu_159_V_V_data_0_read : STD_LOGIC;
    signal grp_readCalcData_fu_159_V_V_data_1_read : STD_LOGIC;
    signal grp_readCalcData_fu_159_V_V_data_2_read : STD_LOGIC;
    signal grp_readCalcData_fu_159_V_V_data_3_read : STD_LOGIC;
    signal grp_readCalcData_fu_159_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_159_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_159_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_159_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_159_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_159_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_159_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_159_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_159_ap_ce : STD_LOGIC;
    signal ap_block_state9_pp0_stage1_iter0_ignore_call3 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter1_ignore_call3 : BOOLEAN;
    signal ap_block_state25_pp0_stage1_iter2_ignore_call3 : BOOLEAN;
    signal ap_block_state33_pp0_stage1_iter3_ignore_call3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp89 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter1_ignore_call18 : BOOLEAN;
    signal ap_block_state26_pp0_stage2_iter2_ignore_call18 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp101 : BOOLEAN;
    signal ap_block_state11_pp0_stage3_iter0_ignore_call33 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter1_ignore_call33 : BOOLEAN;
    signal ap_block_state27_pp0_stage3_iter2_ignore_call33 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp116 : BOOLEAN;
    signal ap_block_state12_pp0_stage4_iter0_ignore_call48 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter1_ignore_call48 : BOOLEAN;
    signal ap_block_state28_pp0_stage4_iter2_ignore_call48 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp134 : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_152_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_readCalcData_fu_159_ap_start_reg : STD_LOGIC := '0';
    signal F_acc_V_data_01_update : STD_LOGIC;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal V_acc_V_data_01_update : STD_LOGIC;
    signal grp_fu_179_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal grp_fu_183_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_187_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_187_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_231_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_231_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_179_ce : STD_LOGIC;
    signal grp_fu_183_ce : STD_LOGIC;
    signal grp_fu_187_ce : STD_LOGIC;
    signal grp_fu_231_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_231_p00 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_231_p10 : STD_LOGIC_VECTOR (53 downto 0);

    component readCalcData IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        F_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_0_empty_n : IN STD_LOGIC;
        F_V_data_0_read : OUT STD_LOGIC;
        F_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_1_empty_n : IN STD_LOGIC;
        F_V_data_1_read : OUT STD_LOGIC;
        F_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_2_empty_n : IN STD_LOGIC;
        F_V_data_2_read : OUT STD_LOGIC;
        F_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_3_empty_n : IN STD_LOGIC;
        F_V_data_3_read : OUT STD_LOGIC;
        V_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        V_V_data_0_empty_n : IN STD_LOGIC;
        V_V_data_0_read : OUT STD_LOGIC;
        V_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        V_V_data_1_empty_n : IN STD_LOGIC;
        V_V_data_1_read : OUT STD_LOGIC;
        V_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        V_V_data_2_empty_n : IN STD_LOGIC;
        V_V_data_2_read : OUT STD_LOGIC;
        V_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        V_V_data_3_empty_n : IN STD_LOGIC;
        V_V_data_3_read : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_0_blk_n : OUT STD_LOGIC;
        F_V_data_1_blk_n : OUT STD_LOGIC;
        F_V_data_2_blk_n : OUT STD_LOGIC;
        F_V_data_3_blk_n : OUT STD_LOGIC;
        V_V_data_0_blk_n : OUT STD_LOGIC;
        V_V_data_1_blk_n : OUT STD_LOGIC;
        V_V_data_2_blk_n : OUT STD_LOGIC;
        V_V_data_3_blk_n : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC );
    end component;


    component GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GapJunctionIP_mul_27ns_27ns_54_7_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;



begin
    grp_readCalcData_fu_159 : component readCalcData
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_readCalcData_fu_159_ap_start,
        ap_done => grp_readCalcData_fu_159_ap_done,
        ap_idle => grp_readCalcData_fu_159_ap_idle,
        ap_ready => grp_readCalcData_fu_159_ap_ready,
        F_V_data_0_dout => F_V_data_0_dout,
        F_V_data_0_empty_n => F_V_data_0_empty_n,
        F_V_data_0_read => grp_readCalcData_fu_159_F_V_data_0_read,
        F_V_data_1_dout => F_V_data_1_dout,
        F_V_data_1_empty_n => F_V_data_1_empty_n,
        F_V_data_1_read => grp_readCalcData_fu_159_F_V_data_1_read,
        F_V_data_2_dout => F_V_data_2_dout,
        F_V_data_2_empty_n => F_V_data_2_empty_n,
        F_V_data_2_read => grp_readCalcData_fu_159_F_V_data_2_read,
        F_V_data_3_dout => F_V_data_3_dout,
        F_V_data_3_empty_n => F_V_data_3_empty_n,
        F_V_data_3_read => grp_readCalcData_fu_159_F_V_data_3_read,
        V_V_data_0_dout => V_V_data_0_dout,
        V_V_data_0_empty_n => V_V_data_0_empty_n,
        V_V_data_0_read => grp_readCalcData_fu_159_V_V_data_0_read,
        V_V_data_1_dout => V_V_data_1_dout,
        V_V_data_1_empty_n => V_V_data_1_empty_n,
        V_V_data_1_read => grp_readCalcData_fu_159_V_V_data_1_read,
        V_V_data_2_dout => V_V_data_2_dout,
        V_V_data_2_empty_n => V_V_data_2_empty_n,
        V_V_data_2_read => grp_readCalcData_fu_159_V_V_data_2_read,
        V_V_data_3_dout => V_V_data_3_dout,
        V_V_data_3_empty_n => V_V_data_3_empty_n,
        V_V_data_3_read => grp_readCalcData_fu_159_V_V_data_3_read,
        ap_return_0 => grp_readCalcData_fu_159_ap_return_0,
        ap_return_1 => grp_readCalcData_fu_159_ap_return_1,
        ap_return_2 => grp_readCalcData_fu_159_ap_return_2,
        ap_return_3 => grp_readCalcData_fu_159_ap_return_3,
        ap_return_4 => grp_readCalcData_fu_159_ap_return_4,
        ap_return_5 => grp_readCalcData_fu_159_ap_return_5,
        ap_return_6 => grp_readCalcData_fu_159_ap_return_6,
        ap_return_7 => grp_readCalcData_fu_159_ap_return_7,
        F_V_data_0_blk_n => grp_readCalcData_fu_159_F_V_data_0_blk_n,
        F_V_data_1_blk_n => grp_readCalcData_fu_159_F_V_data_1_blk_n,
        F_V_data_2_blk_n => grp_readCalcData_fu_159_F_V_data_2_blk_n,
        F_V_data_3_blk_n => grp_readCalcData_fu_159_F_V_data_3_blk_n,
        V_V_data_0_blk_n => grp_readCalcData_fu_159_V_V_data_0_blk_n,
        V_V_data_1_blk_n => grp_readCalcData_fu_159_V_V_data_1_blk_n,
        V_V_data_2_blk_n => grp_readCalcData_fu_159_V_V_data_2_blk_n,
        V_V_data_3_blk_n => grp_readCalcData_fu_159_V_V_data_3_blk_n,
        ap_ce => grp_readCalcData_fu_159_ap_ce);

    GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1_U139 : component GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_179_p0,
        din1 => grp_fu_179_p1,
        ce => grp_fu_179_ce,
        dout => grp_fu_179_p2);

    GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1_U140 : component GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_183_p0,
        din1 => grp_fu_183_p1,
        ce => grp_fu_183_ce,
        dout => grp_fu_183_p2);

    GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1_U141 : component GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_187_p0,
        din1 => grp_fu_187_p1,
        ce => grp_fu_187_ce,
        dout => grp_fu_187_p2);

    GapJunctionIP_mul_27ns_27ns_54_7_1_U142 : component GapJunctionIP_mul_27ns_27ns_54_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 27,
        din1_WIDTH => 27,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_231_p0,
        din1 => grp_fu_231_p1,
        ce => grp_fu_231_ce,
        dout => grp_fu_231_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_readCalcData_fu_159_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_readCalcData_fu_159_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_237_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0)))) then 
                    grp_readCalcData_fu_159_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_readCalcData_fu_159_ap_ready = ap_const_logic_1)) then 
                    grp_readCalcData_fu_159_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_263 = ap_const_lv1_0))) then 
                indvar_flatten_reg_148 <= indvar_flatten_next_reg_267;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten_reg_148 <= ap_const_lv54_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0))) then
                F_vector_data_0_1_reg_312 <= grp_readCalcData_fu_159_ap_return_0;
                F_vector_data_1_1_reg_317 <= grp_readCalcData_fu_159_ap_return_1;
                F_vector_data_2_1_reg_322 <= grp_readCalcData_fu_159_ap_return_2;
                F_vector_data_3_1_reg_327 <= grp_readCalcData_fu_159_ap_return_3;
                V_vector_data_0_1_reg_332 <= grp_readCalcData_fu_159_ap_return_4;
                V_vector_data_1_1_reg_337 <= grp_readCalcData_fu_159_ap_return_5;
                V_vector_data_2_1_reg_342 <= grp_readCalcData_fu_159_ap_return_6;
                V_vector_data_3_1_reg_347 <= grp_readCalcData_fu_159_ap_return_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0))) then
                F_vector_data_0_2_reg_352 <= grp_readCalcData_fu_159_ap_return_0;
                F_vector_data_1_2_reg_357 <= grp_readCalcData_fu_159_ap_return_1;
                F_vector_data_2_2_reg_362 <= grp_readCalcData_fu_159_ap_return_2;
                F_vector_data_3_2_reg_367 <= grp_readCalcData_fu_159_ap_return_3;
                V_vector_data_0_2_reg_372 <= grp_readCalcData_fu_159_ap_return_4;
                V_vector_data_1_2_reg_377 <= grp_readCalcData_fu_159_ap_return_5;
                V_vector_data_2_2_reg_382 <= grp_readCalcData_fu_159_ap_return_6;
                V_vector_data_3_2_reg_387 <= grp_readCalcData_fu_159_ap_return_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0))) then
                F_vector_data_0_3_reg_392 <= grp_readCalcData_fu_159_ap_return_0;
                F_vector_data_1_3_reg_397 <= grp_readCalcData_fu_159_ap_return_1;
                F_vector_data_2_3_reg_402 <= grp_readCalcData_fu_159_ap_return_2;
                F_vector_data_3_3_reg_407 <= grp_readCalcData_fu_159_ap_return_3;
                V_vector_data_0_3_reg_412 <= grp_readCalcData_fu_159_ap_return_4;
                V_vector_data_1_3_reg_417 <= grp_readCalcData_fu_159_ap_return_5;
                V_vector_data_2_3_reg_422 <= grp_readCalcData_fu_159_ap_return_6;
                V_vector_data_3_3_reg_427 <= grp_readCalcData_fu_159_ap_return_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0))) then
                F_vector_data_0_reg_272 <= grp_readCalcData_fu_159_ap_return_0;
                F_vector_data_1_reg_277 <= grp_readCalcData_fu_159_ap_return_1;
                F_vector_data_2_reg_282 <= grp_readCalcData_fu_159_ap_return_2;
                F_vector_data_3_reg_287 <= grp_readCalcData_fu_159_ap_return_3;
                V_vector_data_0_reg_292 <= grp_readCalcData_fu_159_ap_return_4;
                V_vector_data_1_reg_297 <= grp_readCalcData_fu_159_ap_return_5;
                V_vector_data_2_reg_302 <= grp_readCalcData_fu_159_ap_return_6;
                V_vector_data_3_reg_307 <= grp_readCalcData_fu_159_ap_return_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                bound_reg_258 <= grp_fu_231_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter1_reg = ap_const_lv1_0))) then
                dataTemp1_1_reg_442 <= grp_fu_187_p2;
                dataTemp1_reg_432 <= grp_fu_179_p2;
                dataTemp2_reg_437 <= grp_fu_183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_263_pp0_iter1_reg = ap_const_lv1_0))) then
                dataTemp1_2_reg_452 <= grp_fu_183_p2;
                dataTemp2_1_reg_447 <= grp_fu_179_p2;
                dataTemp2_2_reg_457 <= grp_fu_187_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_263_pp0_iter1_reg = ap_const_lv1_0))) then
                dataTemp1_3_reg_462 <= grp_fu_179_p2;
                dataTemp1_4_reg_472 <= grp_fu_187_p2;
                dataTemp2_3_reg_467 <= grp_fu_183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_263_pp0_iter1_reg = ap_const_lv1_0))) then
                dataTemp1_5_reg_482 <= grp_fu_183_p2;
                dataTemp2_4_reg_477 <= grp_fu_179_p2;
                dataTemp2_5_reg_487 <= grp_fu_187_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_263_pp0_iter1_reg = ap_const_lv1_0))) then
                dataTemp1_6_reg_492 <= grp_fu_179_p2;
                dataTemp1_7_reg_502 <= grp_fu_187_p2;
                dataTemp2_6_reg_497 <= grp_fu_183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_263_pp0_iter1_reg = ap_const_lv1_0))) then
                dataTemp2_7_reg_507 <= grp_fu_179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_263 <= exitcond_flatten_fu_237_p2;
                exitcond_flatten_reg_263_pp0_iter1_reg <= exitcond_flatten_reg_263;
                exitcond_flatten_reg_263_pp0_iter2_reg <= exitcond_flatten_reg_263_pp0_iter1_reg;
                exitcond_flatten_reg_263_pp0_iter3_reg <= exitcond_flatten_reg_263_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                indvar_flatten_next_reg_267 <= indvar_flatten_next_fu_242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_263_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_0_4_reg_517 <= grp_fu_187_p2;
                tmp_data_0_reg_512 <= grp_fu_183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_263_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_1_4_reg_527 <= grp_fu_183_p2;
                tmp_data_1_reg_522 <= grp_fu_179_p2;
                tmp_data_2_reg_532 <= grp_fu_187_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_263_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_2_4_reg_537 <= grp_fu_179_p2;
                tmp_data_3_4_reg_547 <= grp_fu_187_p2;
                tmp_data_3_reg_542 <= grp_fu_183_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, exitcond_flatten_fu_237_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_237_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_237_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    F_V_data_0_blk_n_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            F_V_data_0_blk_n <= grp_readCalcData_fu_159_F_V_data_0_blk_n;
        else 
            F_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    F_V_data_0_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_F_V_data_0_read)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            F_V_data_0_read <= grp_readCalcData_fu_159_F_V_data_0_read;
        else 
            F_V_data_0_read <= ap_const_logic_0;
        end if; 
    end process;


    F_V_data_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_F_V_data_1_blk_n)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            F_V_data_1_blk_n <= grp_readCalcData_fu_159_F_V_data_1_blk_n;
        else 
            F_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    F_V_data_1_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_F_V_data_1_read)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            F_V_data_1_read <= grp_readCalcData_fu_159_F_V_data_1_read;
        else 
            F_V_data_1_read <= ap_const_logic_0;
        end if; 
    end process;


    F_V_data_2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_F_V_data_2_blk_n)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            F_V_data_2_blk_n <= grp_readCalcData_fu_159_F_V_data_2_blk_n;
        else 
            F_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    F_V_data_2_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_F_V_data_2_read)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            F_V_data_2_read <= grp_readCalcData_fu_159_F_V_data_2_read;
        else 
            F_V_data_2_read <= ap_const_logic_0;
        end if; 
    end process;


    F_V_data_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_F_V_data_3_blk_n)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            F_V_data_3_blk_n <= grp_readCalcData_fu_159_F_V_data_3_blk_n;
        else 
            F_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    F_V_data_3_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_F_V_data_3_read)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            F_V_data_3_read <= grp_readCalcData_fu_159_F_V_data_3_read;
        else 
            F_V_data_3_read <= ap_const_logic_0;
        end if; 
    end process;

    F_acc_V_data_01_status <= (F_acc_V_data_3_full_n and F_acc_V_data_2_full_n and F_acc_V_data_1_full_n and F_acc_V_data_0_full_n);

    F_acc_V_data_01_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0))) then 
            F_acc_V_data_01_update <= ap_const_logic_1;
        else 
            F_acc_V_data_01_update <= ap_const_logic_0;
        end if; 
    end process;


    F_acc_V_data_0_blk_n_assign_proc : process(F_acc_V_data_0_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            F_acc_V_data_0_blk_n <= F_acc_V_data_0_full_n;
        else 
            F_acc_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_0_din <= tmp_data_0_reg_512;
    F_acc_V_data_0_write <= F_acc_V_data_01_update;

    F_acc_V_data_1_blk_n_assign_proc : process(F_acc_V_data_1_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            F_acc_V_data_1_blk_n <= F_acc_V_data_1_full_n;
        else 
            F_acc_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_1_din <= tmp_data_1_reg_522;
    F_acc_V_data_1_write <= F_acc_V_data_01_update;

    F_acc_V_data_2_blk_n_assign_proc : process(F_acc_V_data_2_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            F_acc_V_data_2_blk_n <= F_acc_V_data_2_full_n;
        else 
            F_acc_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_2_din <= tmp_data_2_reg_532;
    F_acc_V_data_2_write <= F_acc_V_data_01_update;

    F_acc_V_data_3_blk_n_assign_proc : process(F_acc_V_data_3_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            F_acc_V_data_3_blk_n <= F_acc_V_data_3_full_n;
        else 
            F_acc_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_3_din <= tmp_data_3_reg_542;
    F_acc_V_data_3_write <= F_acc_V_data_01_update;

    V_V_data_0_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_V_V_data_0_blk_n)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            V_V_data_0_blk_n <= grp_readCalcData_fu_159_V_V_data_0_blk_n;
        else 
            V_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    V_V_data_0_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_V_V_data_0_read)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            V_V_data_0_read <= grp_readCalcData_fu_159_V_V_data_0_read;
        else 
            V_V_data_0_read <= ap_const_logic_0;
        end if; 
    end process;


    V_V_data_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_V_V_data_1_blk_n)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            V_V_data_1_blk_n <= grp_readCalcData_fu_159_V_V_data_1_blk_n;
        else 
            V_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    V_V_data_1_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_V_V_data_1_read)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            V_V_data_1_read <= grp_readCalcData_fu_159_V_V_data_1_read;
        else 
            V_V_data_1_read <= ap_const_logic_0;
        end if; 
    end process;


    V_V_data_2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_V_V_data_2_blk_n)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            V_V_data_2_blk_n <= grp_readCalcData_fu_159_V_V_data_2_blk_n;
        else 
            V_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    V_V_data_2_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_V_V_data_2_read)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            V_V_data_2_read <= grp_readCalcData_fu_159_V_V_data_2_read;
        else 
            V_V_data_2_read <= ap_const_logic_0;
        end if; 
    end process;


    V_V_data_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            V_V_data_3_blk_n <= grp_readCalcData_fu_159_V_V_data_3_blk_n;
        else 
            V_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    V_V_data_3_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_263, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, grp_readCalcData_fu_159_V_V_data_3_read)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_263 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            V_V_data_3_read <= grp_readCalcData_fu_159_V_V_data_3_read;
        else 
            V_V_data_3_read <= ap_const_logic_0;
        end if; 
    end process;

    V_acc_V_data_01_status <= (V_acc_V_data_3_full_n and V_acc_V_data_2_full_n and V_acc_V_data_1_full_n and V_acc_V_data_0_full_n);

    V_acc_V_data_01_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0))) then 
            V_acc_V_data_01_update <= ap_const_logic_1;
        else 
            V_acc_V_data_01_update <= ap_const_logic_0;
        end if; 
    end process;


    V_acc_V_data_0_blk_n_assign_proc : process(V_acc_V_data_0_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            V_acc_V_data_0_blk_n <= V_acc_V_data_0_full_n;
        else 
            V_acc_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_0_din <= tmp_data_0_4_reg_517;
    V_acc_V_data_0_write <= V_acc_V_data_01_update;

    V_acc_V_data_1_blk_n_assign_proc : process(V_acc_V_data_1_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            V_acc_V_data_1_blk_n <= V_acc_V_data_1_full_n;
        else 
            V_acc_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_1_din <= tmp_data_1_4_reg_527;
    V_acc_V_data_1_write <= V_acc_V_data_01_update;

    V_acc_V_data_2_blk_n_assign_proc : process(V_acc_V_data_2_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            V_acc_V_data_2_blk_n <= V_acc_V_data_2_full_n;
        else 
            V_acc_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_2_din <= tmp_data_2_4_reg_537;
    V_acc_V_data_2_write <= V_acc_V_data_01_update;

    V_acc_V_data_3_blk_n_assign_proc : process(V_acc_V_data_3_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            V_acc_V_data_3_blk_n <= V_acc_V_data_3_full_n;
        else 
            V_acc_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_3_din <= tmp_data_3_4_reg_547;
    V_acc_V_data_3_write <= V_acc_V_data_01_update;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(14);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(15);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg, F_acc_V_data_01_status, V_acc_V_data_01_status)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_const_logic_0 = V_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = F_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg, F_acc_V_data_01_status, V_acc_V_data_01_status)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_const_logic_0 = V_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = F_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp89_assign_proc : process(ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg, F_acc_V_data_01_status, V_acc_V_data_01_status)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp89 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_const_logic_0 = V_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = F_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_263_pp0_iter3_reg, F_acc_V_data_01_status, V_acc_V_data_01_status)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_const_logic_0 = V_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = F_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage2_11001_ignoreCallOp101 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage3_11001_ignoreCallOp116 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage4_11001_ignoreCallOp134 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_subdone_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp0_stage2_iter0_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_state10_pp0_stage2_iter0 <= ((exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage2_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage3_iter0_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_state11_pp0_stage3_iter0 <= ((exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_state11_pp0_stage3_iter0_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp0_stage4_iter0_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_state12_pp0_stage4_iter0 <= ((exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_state12_pp0_stage4_iter0_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter1_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter1_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter1_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter1_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage1_iter2_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage2_iter2_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage3_iter2_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage4_iter2_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state33_pp0_stage1_iter3_assign_proc : process(exitcond_flatten_reg_263_pp0_iter3_reg, F_acc_V_data_01_status, V_acc_V_data_01_status)
    begin
                ap_block_state33_pp0_stage1_iter3 <= (((ap_const_logic_0 = V_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = F_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_state33_pp0_stage1_iter3_ignore_call3_assign_proc : process(exitcond_flatten_reg_263_pp0_iter3_reg, F_acc_V_data_01_status, V_acc_V_data_01_status)
    begin
                ap_block_state33_pp0_stage1_iter3_ignore_call3 <= (((ap_const_logic_0 = V_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = F_acc_V_data_01_status) and (exitcond_flatten_reg_263_pp0_iter3_reg = ap_const_lv1_0)));
    end process;

        ap_block_state8_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage1_iter0_assign_proc : process(grp_readCalcData_fu_159_F_V_data_0_blk_n, exitcond_flatten_reg_263, grp_readCalcData_fu_159_F_V_data_1_blk_n, grp_readCalcData_fu_159_F_V_data_2_blk_n, grp_readCalcData_fu_159_F_V_data_3_blk_n, grp_readCalcData_fu_159_V_V_data_0_blk_n, grp_readCalcData_fu_159_V_V_data_1_blk_n, grp_readCalcData_fu_159_V_V_data_2_blk_n, grp_readCalcData_fu_159_V_V_data_3_blk_n)
    begin
                ap_block_state9_pp0_stage1_iter0 <= ((exitcond_flatten_reg_263 = ap_const_lv1_0) and ((grp_readCalcData_fu_159_V_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_159_F_V_data_0_blk_n = ap_const_logic_0)));
    end process;

        ap_block_state9_pp0_stage1_iter0_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state8_assign_proc : process(exitcond_flatten_fu_237_p2)
    begin
        if ((exitcond_flatten_fu_237_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_152_p4_assign_proc : process(exitcond_flatten_reg_263, indvar_flatten_reg_148, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_267, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_263 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_152_p4 <= indvar_flatten_next_reg_267;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_152_p4 <= indvar_flatten_reg_148;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    exitcond_flatten_fu_237_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_152_p4 = bound_reg_258) else "0";

    grp_fu_179_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_179_ce <= ap_const_logic_1;
        else 
            grp_fu_179_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_179_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage0, F_vector_data_0_reg_272, V_vector_data_2_reg_302, V_vector_data_0_1_reg_332, F_vector_data_2_2_reg_362, F_vector_data_0_3_reg_392, V_vector_data_2_3_reg_422, dataTemp1_2_reg_452, dataTemp1_5_reg_482, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_179_p0 <= dataTemp1_5_reg_482;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_179_p0 <= dataTemp1_2_reg_452;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_179_p0 <= V_vector_data_2_3_reg_422;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_179_p0 <= F_vector_data_0_3_reg_392;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_179_p0 <= F_vector_data_2_2_reg_362;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_179_p0 <= V_vector_data_0_1_reg_332;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_179_p0 <= V_vector_data_2_reg_302;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_179_p0 <= F_vector_data_0_reg_272;
        else 
            grp_fu_179_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_179_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage0, F_vector_data_1_reg_277, V_vector_data_3_reg_307, V_vector_data_1_1_reg_337, F_vector_data_3_2_reg_367, F_vector_data_1_3_reg_397, V_vector_data_3_3_reg_427, dataTemp2_2_reg_457, dataTemp2_5_reg_487, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_179_p1 <= dataTemp2_5_reg_487;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_179_p1 <= dataTemp2_2_reg_457;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_179_p1 <= V_vector_data_3_3_reg_427;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_179_p1 <= F_vector_data_1_3_reg_397;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_179_p1 <= F_vector_data_3_2_reg_367;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_179_p1 <= V_vector_data_1_1_reg_337;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_179_p1 <= V_vector_data_3_reg_307;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_179_p1 <= F_vector_data_1_reg_277;
        else 
            grp_fu_179_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_183_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_183_ce <= ap_const_logic_1;
        else 
            grp_fu_183_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_183_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage0, F_vector_data_2_reg_282, F_vector_data_0_1_reg_312, V_vector_data_2_1_reg_342, V_vector_data_0_2_reg_372, F_vector_data_2_3_reg_402, dataTemp1_reg_432, ap_enable_reg_pp0_iter1, dataTemp1_3_reg_462, dataTemp1_6_reg_492, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_183_p0 <= dataTemp1_6_reg_492;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_183_p0 <= dataTemp1_3_reg_462;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_183_p0 <= dataTemp1_reg_432;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_183_p0 <= F_vector_data_2_3_reg_402;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_183_p0 <= V_vector_data_0_2_reg_372;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_183_p0 <= V_vector_data_2_1_reg_342;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_183_p0 <= F_vector_data_0_1_reg_312;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_183_p0 <= F_vector_data_2_reg_282;
        else 
            grp_fu_183_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_183_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage0, F_vector_data_3_reg_287, F_vector_data_1_1_reg_317, V_vector_data_3_1_reg_347, V_vector_data_1_2_reg_377, F_vector_data_3_3_reg_407, ap_enable_reg_pp0_iter1, dataTemp2_reg_437, dataTemp2_3_reg_467, ap_CS_fsm_pp0_stage5, dataTemp2_6_reg_497, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_183_p1 <= dataTemp2_6_reg_497;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_183_p1 <= dataTemp2_3_reg_467;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_183_p1 <= dataTemp2_reg_437;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_183_p1 <= F_vector_data_3_3_reg_407;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_183_p1 <= V_vector_data_1_2_reg_377;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_183_p1 <= V_vector_data_3_1_reg_347;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_183_p1 <= F_vector_data_1_1_reg_317;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_183_p1 <= F_vector_data_3_reg_287;
        else 
            grp_fu_183_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_187_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_187_ce <= ap_const_logic_1;
        else 
            grp_fu_187_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_187_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage0, V_vector_data_0_reg_292, F_vector_data_2_1_reg_322, F_vector_data_0_2_reg_352, V_vector_data_2_2_reg_382, V_vector_data_0_3_reg_412, ap_enable_reg_pp0_iter1, dataTemp1_1_reg_442, dataTemp1_4_reg_472, ap_CS_fsm_pp0_stage5, dataTemp1_7_reg_502, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_187_p0 <= dataTemp1_7_reg_502;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_187_p0 <= dataTemp1_4_reg_472;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_187_p0 <= dataTemp1_1_reg_442;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_187_p0 <= V_vector_data_0_3_reg_412;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_187_p0 <= V_vector_data_2_2_reg_382;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_187_p0 <= F_vector_data_0_2_reg_352;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_187_p0 <= F_vector_data_2_1_reg_322;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_187_p0 <= V_vector_data_0_reg_292;
        else 
            grp_fu_187_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_187_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage0, V_vector_data_1_reg_297, F_vector_data_3_1_reg_327, F_vector_data_1_2_reg_357, V_vector_data_3_2_reg_387, V_vector_data_1_3_reg_417, ap_enable_reg_pp0_iter1, dataTemp2_1_reg_447, dataTemp2_4_reg_477, ap_CS_fsm_pp0_stage5, dataTemp2_7_reg_507, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_187_p1 <= dataTemp2_7_reg_507;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_187_p1 <= dataTemp2_4_reg_477;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_187_p1 <= dataTemp2_1_reg_447;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_187_p1 <= V_vector_data_1_3_reg_417;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_187_p1 <= V_vector_data_3_2_reg_387;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_187_p1 <= F_vector_data_1_2_reg_357;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_187_p1 <= F_vector_data_3_1_reg_327;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_187_p1 <= V_vector_data_1_reg_297;
        else 
            grp_fu_187_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_231_ce_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n, ap_CS_fsm_state7, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state7) or (not(((ap_done_reg = ap_const_logic_1) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_231_ce <= ap_const_logic_1;
        else 
            grp_fu_231_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_231_p0 <= grp_fu_231_p00(27 - 1 downto 0);
    grp_fu_231_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(simConfig_BLOCK_NUMBERS_V_dout),54));
    grp_fu_231_p1 <= grp_fu_231_p10(27 - 1 downto 0);
    grp_fu_231_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(simConfig_rowsToSimulate_V_dout),54));

    grp_readCalcData_fu_159_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001_ignoreCallOp89, ap_block_pp0_stage2_11001_ignoreCallOp101, ap_block_pp0_stage3_11001_ignoreCallOp116, ap_block_pp0_stage4_11001_ignoreCallOp134)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp134) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp116) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp101) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp89) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_readCalcData_fu_159_ap_ce <= ap_const_logic_1;
        else 
            grp_readCalcData_fu_159_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_readCalcData_fu_159_ap_start <= grp_readCalcData_fu_159_ap_start_reg;
    indvar_flatten_next_fu_242_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_152_p4) + unsigned(ap_const_lv54_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_BLOCK_NUMBERS_V_blk_n <= simConfig_BLOCK_NUMBERS_V_empty_n;
        else 
            simConfig_BLOCK_NUMBERS_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_BLOCK_NUMBERS_V_out_blk_n <= simConfig_BLOCK_NUMBERS_V_out_full_n;
        else 
            simConfig_BLOCK_NUMBERS_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    simConfig_BLOCK_NUMBERS_V_out_din <= simConfig_BLOCK_NUMBERS_V_dout;

    simConfig_BLOCK_NUMBERS_V_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_BLOCK_NUMBERS_V_out_write <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_rowsToSimulate_V_blk_n <= simConfig_rowsToSimulate_V_empty_n;
        else 
            simConfig_rowsToSimulate_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_rowsToSimulate_V_out_blk_n <= simConfig_rowsToSimulate_V_out_full_n;
        else 
            simConfig_rowsToSimulate_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    simConfig_rowsToSimulate_V_out_din <= simConfig_rowsToSimulate_V_dout;

    simConfig_rowsToSimulate_V_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_rowsToSimulate_V_out_write <= ap_const_logic_1;
        else 
            simConfig_rowsToSimulate_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_1;
        else 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
